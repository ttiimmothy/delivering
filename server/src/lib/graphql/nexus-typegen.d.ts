/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddToCartInput: { // input type
    menuItemId: string; // String!
    quantity: number; // Int!
    selectedOptions?: string | null; // String
    specialInstructions?: string | null; // String
  }
  AddressInput: { // input type
    city: string; // String!
    country: string; // String!
    isDefault?: boolean | null; // Boolean
    state: string; // String!
    street: string; // String!
    zipCode: string; // String!
  }
  AssignCourierInput: { // input type
    courierId: string; // String!
    orderId: string; // String!
  }
  CourierProfileInput: { // input type
    currentLocation?: NexusGenScalars['LocationInput'] | null; // LocationInput
    isAvailable: boolean | null; // Boolean
    licensePlate?: string | null; // String
    vehicleType: NexusGenEnums['VehicleType']; // VehicleType!
  }
  CreateBillingPortalSessionInput: { // input type
    customerId: string; // String!
    returnUrl: string; // String!
  }
  CreateCheckoutSessionInput: { // input type
    cancelUrl: string; // String!
    priceId: string; // String!
    successUrl: string; // String!
  }
  CreateCourierProfileInput: { // input type
    currentLocation?: NexusGenScalars['LocationInput'] | null; // LocationInput
    isAvailable?: boolean | null; // Boolean
    licensePlate?: string | null; // String
    vehicleType: NexusGenEnums['VehicleType']; // VehicleType!
  }
  CreateMenuCategoryInput: { // input type
    description?: string | null; // String
    isActive?: boolean | null; // Boolean
    name: string; // String!
    restaurantId: string; // String!
    sortOrder?: number | null; // Int
  }
  CreateMenuItemInput: { // input type
    categoryId: string; // String!
    description?: string | null; // String
    image?: string | null; // String
    isAvailable?: boolean | null; // Boolean
    name: string; // String!
    price: string; // String!
    restaurantId: string; // String!
    sortOrder?: number | null; // Int
  }
  CreateMenuItemOptionInput: { // input type
    isRequired?: boolean | null; // Boolean
    menuItemId: string; // String!
    name: string; // String!
    sortOrder?: number | null; // Int
    type: NexusGenEnums['MenuItemOptionType']; // MenuItemOptionType!
  }
  CreateMenuItemOptionValueInput: { // input type
    name: string; // String!
    optionId: string; // String!
    price: string; // String!
    sortOrder?: number | null; // Int
  }
  CreateOrderInput: { // input type
    deliveryAddress: string; // String!
    restaurantId: string; // String!
    specialInstructions?: string | null; // String
    stripePaymentIntentId?: string | null; // String
  }
  CreatePaymentIntentInput: { // input type
    amount: string; // String!
    currency: string; // String!
  }
  CreateRefundInput: { // input type
    amount?: string | null; // String
    paymentIntentId: string; // String!
    reason?: string | null; // String
  }
  CreateRestaurantInput: { // input type
    address: NexusGenInputs['AddressInput']; // AddressInput!
    cuisine: string; // String!
    deliveryFee: string; // String!
    deliveryTime: number; // Int!
    description?: string | null; // String
    image?: string | null; // String
    minimumOrder: string; // String!
    name: string; // String!
    phone?: string | null; // String
    slug: string; // String!
  }
  CreateReviewInput: { // input type
    comment?: string | null; // String
    orderId: string; // String!
    rating: number; // Int!
    type: NexusGenEnums['ReviewType']; // ReviewType!
  }
  LoginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  RemoveFromCartInput: { // input type
    cartItemId: string; // String!
  }
  SignupInput: { // input type
    email: string; // String!
    firstName: string; // String!
    lastName: string; // String!
    password: string; // String!
    phone?: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
  }
  UpdateCartItemInput: { // input type
    cartItemId: string; // String!
    quantity?: number | null; // Int
    selectedOptions?: string | null; // String
    specialInstructions?: string | null; // String
  }
  UpdateCourierLocationInput: { // input type
    latitude: number; // Float!
    longitude: number; // Float!
  }
  UpdateCourierProfileInput: { // input type
    currentLocation?: NexusGenScalars['LocationInput'] | null; // LocationInput
    isAvailable?: boolean | null; // Boolean
    licensePlate?: string | null; // String
    vehicleType?: NexusGenEnums['VehicleType'] | null; // VehicleType
  }
  UpdateMenuCategoryInput: { // input type
    categoryId: string; // String!
    description?: string | null; // String
    isActive?: boolean | null; // Boolean
    name?: string | null; // String
    sortOrder?: number | null; // Int
  }
  UpdateMenuItemInput: { // input type
    description?: string | null; // String
    image?: string | null; // String
    isAvailable?: boolean | null; // Boolean
    menuItemId: string; // String!
    name?: string | null; // String
    price?: string | null; // String
    sortOrder?: number | null; // Int
  }
  UpdateOrderStatusInput: { // input type
    orderId: string; // String!
    status: NexusGenEnums['OrderStatus']; // OrderStatus!
  }
  UpdateProfileInput: { // input type
    firstName?: string | null; // String
    lastName?: string | null; // String
    phone?: string | null; // String
  }
  UpdateRestaurantInput: { // input type
    address?: NexusGenInputs['AddressInput'] | null; // AddressInput
    cuisine?: string | null; // String
    deliveryFee?: string | null; // String
    deliveryTime?: number | null; // Int
    description?: string | null; // String
    image?: string | null; // String
    isActive?: boolean | null; // Boolean
    isOpen?: boolean | null; // Boolean
    minimumOrder?: string | null; // String
    name?: string | null; // String
    phone?: string | null; // String
    restaurantId: string; // String!
    slug?: string | null; // String
  }
  UpdateReviewInput: { // input type
    comment?: string | null; // String
    rating?: number | null; // Int
    reviewId: string; // String!
  }
}

export interface NexusGenEnums {
  DeliveryStatus: "accepted" | "assigned" | "delivered" | "picked_up"
  MenuItemOptionType: "multiple" | "single"
  OrderStatus: "cancelled" | "confirmed" | "delivered" | "pending" | "picked_up" | "preparing" | "ready"
  PaymentStatus: "failed" | "paid" | "pending" | "refunded"
  ReviewType: "courier" | "restaurant"
  UserRole: "admin" | "courier" | "customer" | "restaurant"
  VehicleType: "bike" | "car" | "motorcycle"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  Location: any
  LocationInput: any
}

export interface NexusGenObjects {
  Address: { // root type
    city: string; // String!
    country: string; // String!
    createdAt: string; // String!
    id: string; // String!
    isDefault: boolean; // Boolean!
    state: string; // String!
    street: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
    zipCode: string; // String!
  }
  AuthResponse: { // root type
    accessToken: string; // String!
    refreshToken: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  BillingPortalSession: { // root type
    createdAt: string; // String!
    id: string; // String!
    returnUrl: string; // String!
    url: string; // String!
  }
  Cart: { // root type
    id: string; // String!
    restaurantId: string; // String!
    userId: string; // String!
  }
  CartItem: { // root type
    cartId: string; // String!
    id: string; // String!
    menuItemId: string; // String!
    quantity: number; // Int!
    selectedOptions: string; // String!
    specialInstructions?: string | null; // String
  }
  CheckoutSession: { // root type
    createdAt: string; // String!
    customerEmail: string; // String!
    customerId: string; // String!
    expiresAt: string; // String!
    id: string; // String!
    status: string; // String!
    url: string; // String!
  }
  CourierLocationUpdate: { // root type
    deliveryId: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    timestamp: string; // String!
  }
  CourierProfile: { // root type
    createdAt: string; // String!
    id: string; // String!
    isAvailable: boolean; // Boolean!
    licensePlate?: string | null; // String
    rating: number; // Float!
    reviewCount: number; // Int!
    totalDeliveries: number; // Int!
    updatedAt: string; // String!
    userId: string; // String!
    vehicleType: NexusGenEnums['VehicleType']; // VehicleType!
  }
  CourierStatusUpdate: { // root type
    courierId: string; // String!
    isAvailable: boolean; // Boolean!
    updatedAt: string; // String!
  }
  CourierTrackingUpdate: { // root type
    courierId: string; // String!
    deliveryId: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    status: string; // String!
    timestamp: string; // String!
  }
  Delivery: { // root type
    assignedAt: NexusGenScalars['DateTime']; // DateTime!
    courierId: string; // String!
    id: string; // String!
    orderId: string; // String!
    status: NexusGenEnums['DeliveryStatus']; // DeliveryStatus!
  }
  DeliveryAssignment: { // root type
    assignedAt: string; // String!
    courierId: string; // String!
    deliveryId: string; // String!
    orderId: string; // String!
  }
  DeliveryStatusUpdate: { // root type
    deliveryId: string; // String!
    message?: string | null; // String
    status: string; // String!
    updatedAt: string; // String!
  }
  MenuCategory: { // root type
    createdAt: string; // String!
    description?: string | null; // String
    id: string; // String!
    isActive: boolean; // Boolean!
    name: string; // String!
    restaurantId: string; // String!
    sortOrder: number; // Int!
    updatedAt: string; // String!
  }
  MenuItem: { // root type
    categoryId: string; // String!
    createdAt: string; // String!
    description?: string | null; // String
    id: string; // String!
    image?: string | null; // String
    isAvailable: boolean; // Boolean!
    name: string; // String!
    price: string; // String!
    restaurantId: string; // String!
    sortOrder: number; // Int!
    updatedAt: string; // String!
  }
  MenuItemOption: { // root type
    createdAt: string; // String!
    id: string; // String!
    isRequired: boolean; // Boolean!
    menuItemId: string; // String!
    name: string; // String!
    sortOrder: number; // Int!
    type: NexusGenEnums['MenuItemOptionType']; // MenuItemOptionType!
    updatedAt: string; // String!
  }
  MenuItemOptionValue: { // root type
    createdAt: string; // String!
    id: string; // String!
    name: string; // String!
    optionId: string; // String!
    price: string; // String!
    sortOrder: number; // Int!
    updatedAt: string; // String!
  }
  Mutation: {};
  Order: { // root type
    courierId?: string | null; // String
    createdAt: string; // String!
    customerId: string; // String!
    deliveryAddress: string; // String!
    deliveryFee: string; // String!
    estimatedDeliveryTime?: string | null; // String
    id: string; // String!
    orderNumber: string; // String!
    paymentStatus: NexusGenEnums['PaymentStatus']; // PaymentStatus!
    restaurantId: string; // String!
    specialInstructions?: string | null; // String
    status: NexusGenEnums['OrderStatus']; // OrderStatus!
    stripePaymentIntentId?: string | null; // String
    stripeSessionId?: string | null; // String
    subtotal: string; // String!
    tax: string; // String!
    tip: string; // String!
    total: string; // String!
    updatedAt: string; // String!
  }
  OrderEvent: { // root type
    createdAt: string; // String!
    description?: string | null; // String
    eventType: string; // String!
    id: string; // String!
    orderId: string; // String!
  }
  OrderItem: { // root type
    createdAt: string; // String!
    id: string; // String!
    menuItemId: string; // String!
    orderId: string; // String!
    price: string; // String!
    quantity: number; // Int!
    selectedOptions: string; // String!
    specialInstructions?: string | null; // String
    updatedAt: string; // String!
  }
  OrderQueueUpdate: { // root type
    queueLength: number; // Int!
    restaurantId: string; // String!
    updatedAt: string; // String!
  }
  OrderTrackingUpdate: { // root type
    courierId?: string | null; // String
    message?: string | null; // String
    orderId: string; // String!
    status: string; // String!
    updatedAt: string; // String!
  }
  OrderUpdate: { // root type
    message?: string | null; // String
    orderId: string; // String!
    status: string; // String!
    updatedAt: string; // String!
  }
  PaymentIntent: { // root type
    amount: string; // String!
    clientSecret: string; // String!
    createdAt: string; // String!
    currency: string; // String!
    id: string; // String!
    status: string; // String!
  }
  Query: {};
  RefreshTokenResponse: { // root type
    accessToken: string; // String!
    refreshToken: string; // String!
  }
  Refund: { // root type
    amount: string; // String!
    createdAt: string; // String!
    currency: string; // String!
    id: string; // String!
    reason: string; // String!
    status: string; // String!
  }
  Restaurant: { // root type
    addressId: string; // String!
    createdAt: string; // String!
    cuisine: string; // String!
    deliveryFee: string; // String!
    deliveryTime: number; // Int!
    description?: string | null; // String
    id: string; // ID!
    image?: string | null; // String
    isActive: boolean; // Boolean!
    isOpen: boolean; // Boolean!
    minimumOrder: string; // String!
    name: string; // String!
    ownerId: string; // String!
    phone?: string | null; // String
    rating?: string | null; // String
    reviewCount: number; // Int!
    slug: string; // String!
    updatedAt: string; // String!
  }
  Review: { // root type
    comment?: string | null; // String
    createdAt: string; // String!
    customerId: string; // String!
    id: string; // String!
    orderId: string; // String!
    rating: number; // Int!
    type: NexusGenEnums['ReviewType']; // ReviewType!
    updatedAt: string; // String!
  }
  User: { // root type
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: string; // String!
    isActive: boolean; // Boolean!
    lastName: string; // String!
    phone?: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
    updatedAt: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Address: { // field return type
    city: string; // String!
    country: string; // String!
    createdAt: string; // String!
    id: string; // String!
    isDefault: boolean; // Boolean!
    state: string; // String!
    street: string; // String!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
    zipCode: string; // String!
  }
  AuthResponse: { // field return type
    accessToken: string; // String!
    refreshToken: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  BillingPortalSession: { // field return type
    createdAt: string; // String!
    id: string; // String!
    returnUrl: string; // String!
    url: string; // String!
  }
  Cart: { // field return type
    createdAt: string; // String!
    id: string; // String!
    items: Array<NexusGenRootTypes['CartItem'] | null> | null; // [CartItem]
    restaurantId: string; // String!
    updatedAt: string; // String!
    userId: string; // String!
  }
  CartItem: { // field return type
    cartId: string; // String!
    createdAt: string; // String!
    id: string; // String!
    menuItem: NexusGenRootTypes['MenuItem'] | null; // MenuItem
    menuItemId: string; // String!
    quantity: number; // Int!
    selectedOptions: string; // String!
    specialInstructions: string | null; // String
    updatedAt: string; // String!
  }
  CheckoutSession: { // field return type
    createdAt: string; // String!
    customerEmail: string; // String!
    customerId: string; // String!
    expiresAt: string; // String!
    id: string; // String!
    status: string; // String!
    url: string; // String!
  }
  CourierLocationUpdate: { // field return type
    deliveryId: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    timestamp: string; // String!
  }
  CourierProfile: { // field return type
    createdAt: string; // String!
    currentLocation: NexusGenScalars['Location'] | null; // Location
    id: string; // String!
    isAvailable: boolean; // Boolean!
    licensePlate: string | null; // String
    rating: number; // Float!
    reviewCount: number; // Int!
    totalDeliveries: number; // Int!
    updatedAt: string; // String!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
    vehicleType: NexusGenEnums['VehicleType']; // VehicleType!
  }
  CourierStatusUpdate: { // field return type
    courierId: string; // String!
    isAvailable: boolean; // Boolean!
    updatedAt: string; // String!
  }
  CourierTrackingUpdate: { // field return type
    courierId: string; // String!
    deliveryId: string; // String!
    latitude: number; // Float!
    longitude: number; // Float!
    status: string; // String!
    timestamp: string; // String!
  }
  Delivery: { // field return type
    assignedAt: NexusGenScalars['DateTime']; // DateTime!
    courier: NexusGenRootTypes['User'] | null; // User
    courierId: string; // String!
    createdAt: string; // String!
    currentLocation: NexusGenScalars['Location'] | null; // Location
    estimatedArrival: string | null; // String
    id: string; // String!
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: string; // String!
    status: NexusGenEnums['DeliveryStatus']; // DeliveryStatus!
    updatedAt: string; // String!
  }
  DeliveryAssignment: { // field return type
    assignedAt: string; // String!
    courierId: string; // String!
    deliveryId: string; // String!
    orderId: string; // String!
  }
  DeliveryStatusUpdate: { // field return type
    deliveryId: string; // String!
    message: string | null; // String
    status: string; // String!
    updatedAt: string; // String!
  }
  MenuCategory: { // field return type
    createdAt: string; // String!
    description: string | null; // String
    id: string; // String!
    isActive: boolean; // Boolean!
    menuItems: Array<NexusGenRootTypes['MenuItem'] | null> | null; // [MenuItem]
    name: string; // String!
    restaurantId: string; // String!
    sortOrder: number; // Int!
    updatedAt: string; // String!
  }
  MenuItem: { // field return type
    categoryId: string; // String!
    createdAt: string; // String!
    description: string | null; // String
    id: string; // String!
    image: string | null; // String
    isAvailable: boolean; // Boolean!
    name: string; // String!
    options: Array<NexusGenRootTypes['MenuItemOption'] | null> | null; // [MenuItemOption]
    price: string; // String!
    restaurantId: string; // String!
    sortOrder: number; // Int!
    updatedAt: string; // String!
  }
  MenuItemOption: { // field return type
    createdAt: string; // String!
    id: string; // String!
    isRequired: boolean; // Boolean!
    menuItemId: string; // String!
    name: string; // String!
    sortOrder: number; // Int!
    type: NexusGenEnums['MenuItemOptionType']; // MenuItemOptionType!
    updatedAt: string; // String!
    values: Array<NexusGenRootTypes['MenuItemOptionValue'] | null> | null; // [MenuItemOptionValue]
  }
  MenuItemOptionValue: { // field return type
    createdAt: string; // String!
    id: string; // String!
    name: string; // String!
    optionId: string; // String!
    price: string; // String!
    sortOrder: number; // Int!
    updatedAt: string; // String!
  }
  Mutation: { // field return type
    acceptDelivery: NexusGenRootTypes['Delivery'] | null; // Delivery
    addToCart: NexusGenRootTypes['CartItem'] | null; // CartItem
    cancelPaymentIntent: NexusGenRootTypes['PaymentIntent'] | null; // PaymentIntent
    clearCart: boolean | null; // Boolean
    confirmOrder: NexusGenRootTypes['Order'] | null; // Order
    confirmPaymentIntent: NexusGenRootTypes['PaymentIntent'] | null; // PaymentIntent
    createBillingPortalSession: NexusGenRootTypes['BillingPortalSession'] | null; // BillingPortalSession
    createCheckoutSession: NexusGenRootTypes['CheckoutSession'] | null; // CheckoutSession
    createPaymentIntent: NexusGenRootTypes['PaymentIntent'] | null; // PaymentIntent
    createRefund: NexusGenRootTypes['Refund'] | null; // Refund
    createReview: NexusGenRootTypes['Review'] | null; // Review
    deliverOrder: NexusGenRootTypes['Delivery'] | null; // Delivery
    login: NexusGenRootTypes['AuthResponse'] | null; // AuthResponse
    loginWithGoogle: NexusGenRootTypes['AuthResponse'] | null; // AuthResponse
    logout: boolean | null; // Boolean
    pickupOrder: NexusGenRootTypes['Delivery'] | null; // Delivery
    placeOrder: NexusGenRootTypes['Order'] | null; // Order
    refreshToken: NexusGenRootTypes['RefreshTokenResponse'] | null; // RefreshTokenResponse
    removeFromCart: boolean | null; // Boolean
    setRestaurantOpen: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    signup: NexusGenRootTypes['AuthResponse'] | null; // AuthResponse
    toggleFavorite: boolean | null; // Boolean
    updateCartItem: NexusGenRootTypes['CartItem'] | null; // CartItem
    updateCourierLocation: NexusGenRootTypes['CourierProfile'] | null; // CourierProfile
  }
  Order: { // field return type
    courier: NexusGenRootTypes['User'] | null; // User
    courierId: string | null; // String
    createdAt: string; // String!
    customer: NexusGenRootTypes['User'] | null; // User
    customerId: string; // String!
    deliveryAddress: string; // String!
    deliveryFee: string; // String!
    estimatedDeliveryTime: string | null; // String
    events: Array<NexusGenRootTypes['OrderEvent'] | null> | null; // [OrderEvent]
    id: string; // String!
    items: Array<NexusGenRootTypes['OrderItem'] | null> | null; // [OrderItem]
    orderNumber: string; // String!
    paymentStatus: NexusGenEnums['PaymentStatus']; // PaymentStatus!
    restaurant: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    restaurantId: string; // String!
    specialInstructions: string | null; // String
    status: NexusGenEnums['OrderStatus']; // OrderStatus!
    stripePaymentIntentId: string | null; // String
    stripeSessionId: string | null; // String
    subtotal: string; // String!
    tax: string; // String!
    tip: string; // String!
    total: string; // String!
    updatedAt: string; // String!
  }
  OrderEvent: { // field return type
    createdAt: string; // String!
    description: string | null; // String
    eventType: string; // String!
    id: string; // String!
    order: NexusGenRootTypes['Order'] | null; // Order
    orderId: string; // String!
  }
  OrderItem: { // field return type
    createdAt: string; // String!
    id: string; // String!
    menuItem: NexusGenRootTypes['MenuItem'] | null; // MenuItem
    menuItemId: string; // String!
    orderId: string; // String!
    price: string; // String!
    quantity: number; // Int!
    selectedOptions: string; // String!
    specialInstructions: string | null; // String
    updatedAt: string; // String!
  }
  OrderQueueUpdate: { // field return type
    queueLength: number; // Int!
    restaurantId: string; // String!
    updatedAt: string; // String!
  }
  OrderTrackingUpdate: { // field return type
    courierId: string | null; // String
    message: string | null; // String
    orderId: string; // String!
    status: string; // String!
    updatedAt: string; // String!
  }
  OrderUpdate: { // field return type
    message: string | null; // String
    orderId: string; // String!
    status: string; // String!
    updatedAt: string; // String!
  }
  PaymentIntent: { // field return type
    amount: string; // String!
    clientSecret: string; // String!
    createdAt: string; // String!
    currency: string; // String!
    id: string; // String!
    status: string; // String!
  }
  Query: { // field return type
    cart: NexusGenRootTypes['Cart'] | null; // Cart
    courierAssignments: Array<NexusGenRootTypes['Delivery'] | null>; // [Delivery]!
    favoriteRestaurants: Array<NexusGenRootTypes['Restaurant'] | null>; // [Restaurant]!
    me: NexusGenRootTypes['User'] | null; // User
    merchantOrders: Array<NexusGenRootTypes['Order'] | null>; // [Order]!
    order: NexusGenRootTypes['Order'] | null; // Order
    orders: Array<NexusGenRootTypes['Order'] | null>; // [Order]!
    paymentIntent: NexusGenRootTypes['PaymentIntent'] | null; // PaymentIntent
    restaurant: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    restaurants: Array<NexusGenRootTypes['Restaurant'] | null>; // [Restaurant]!
    reviews: Array<NexusGenRootTypes['Review'] | null>; // [Review]!
  }
  RefreshTokenResponse: { // field return type
    accessToken: string; // String!
    refreshToken: string; // String!
  }
  Refund: { // field return type
    amount: string; // String!
    createdAt: string; // String!
    currency: string; // String!
    id: string; // String!
    reason: string; // String!
    status: string; // String!
  }
  Restaurant: { // field return type
    address: NexusGenRootTypes['Address'] | null; // Address
    addressId: string; // String!
    createdAt: string; // String!
    cuisine: string; // String!
    deliveryFee: string; // String!
    deliveryTime: number; // Int!
    description: string | null; // String
    id: string; // ID!
    image: string | null; // String
    isActive: boolean; // Boolean!
    isOpen: boolean; // Boolean!
    menuCategories: Array<NexusGenRootTypes['MenuCategory'] | null> | null; // [MenuCategory]
    menuItems: Array<NexusGenRootTypes['MenuItem'] | null> | null; // [MenuItem]
    minimumOrder: string; // String!
    name: string; // String!
    owner: NexusGenRootTypes['User'] | null; // User
    ownerId: string; // String!
    phone: string | null; // String
    rating: string | null; // String
    reviewCount: number; // Int!
    slug: string; // String!
    updatedAt: string; // String!
  }
  Review: { // field return type
    comment: string | null; // String
    courier: NexusGenRootTypes['User'] | null; // User
    createdAt: string; // String!
    customer: NexusGenRootTypes['User'] | null; // User
    customerId: string; // String!
    id: string; // String!
    orderId: string; // String!
    rating: number; // Int!
    restaurant: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    type: NexusGenEnums['ReviewType']; // ReviewType!
    updatedAt: string; // String!
  }
  User: { // field return type
    courierProfile: NexusGenRootTypes['CourierProfile'] | null; // CourierProfile
    createdAt: string; // String!
    email: string; // String!
    firstName: string; // String!
    id: string; // String!
    isActive: boolean; // Boolean!
    lastName: string; // String!
    phone: string | null; // String
    role: NexusGenEnums['UserRole']; // UserRole!
    updatedAt: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    city: 'String'
    country: 'String'
    createdAt: 'String'
    id: 'String'
    isDefault: 'Boolean'
    state: 'String'
    street: 'String'
    updatedAt: 'String'
    user: 'User'
    userId: 'String'
    zipCode: 'String'
  }
  AuthResponse: { // field return type name
    accessToken: 'String'
    refreshToken: 'String'
    user: 'User'
  }
  BillingPortalSession: { // field return type name
    createdAt: 'String'
    id: 'String'
    returnUrl: 'String'
    url: 'String'
  }
  Cart: { // field return type name
    createdAt: 'String'
    id: 'String'
    items: 'CartItem'
    restaurantId: 'String'
    updatedAt: 'String'
    userId: 'String'
  }
  CartItem: { // field return type name
    cartId: 'String'
    createdAt: 'String'
    id: 'String'
    menuItem: 'MenuItem'
    menuItemId: 'String'
    quantity: 'Int'
    selectedOptions: 'String'
    specialInstructions: 'String'
    updatedAt: 'String'
  }
  CheckoutSession: { // field return type name
    createdAt: 'String'
    customerEmail: 'String'
    customerId: 'String'
    expiresAt: 'String'
    id: 'String'
    status: 'String'
    url: 'String'
  }
  CourierLocationUpdate: { // field return type name
    deliveryId: 'String'
    latitude: 'Float'
    longitude: 'Float'
    timestamp: 'String'
  }
  CourierProfile: { // field return type name
    createdAt: 'String'
    currentLocation: 'Location'
    id: 'String'
    isAvailable: 'Boolean'
    licensePlate: 'String'
    rating: 'Float'
    reviewCount: 'Int'
    totalDeliveries: 'Int'
    updatedAt: 'String'
    user: 'User'
    userId: 'String'
    vehicleType: 'VehicleType'
  }
  CourierStatusUpdate: { // field return type name
    courierId: 'String'
    isAvailable: 'Boolean'
    updatedAt: 'String'
  }
  CourierTrackingUpdate: { // field return type name
    courierId: 'String'
    deliveryId: 'String'
    latitude: 'Float'
    longitude: 'Float'
    status: 'String'
    timestamp: 'String'
  }
  Delivery: { // field return type name
    assignedAt: 'DateTime'
    courier: 'User'
    courierId: 'String'
    createdAt: 'String'
    currentLocation: 'Location'
    estimatedArrival: 'String'
    id: 'String'
    order: 'Order'
    orderId: 'String'
    status: 'DeliveryStatus'
    updatedAt: 'String'
  }
  DeliveryAssignment: { // field return type name
    assignedAt: 'String'
    courierId: 'String'
    deliveryId: 'String'
    orderId: 'String'
  }
  DeliveryStatusUpdate: { // field return type name
    deliveryId: 'String'
    message: 'String'
    status: 'String'
    updatedAt: 'String'
  }
  MenuCategory: { // field return type name
    createdAt: 'String'
    description: 'String'
    id: 'String'
    isActive: 'Boolean'
    menuItems: 'MenuItem'
    name: 'String'
    restaurantId: 'String'
    sortOrder: 'Int'
    updatedAt: 'String'
  }
  MenuItem: { // field return type name
    categoryId: 'String'
    createdAt: 'String'
    description: 'String'
    id: 'String'
    image: 'String'
    isAvailable: 'Boolean'
    name: 'String'
    options: 'MenuItemOption'
    price: 'String'
    restaurantId: 'String'
    sortOrder: 'Int'
    updatedAt: 'String'
  }
  MenuItemOption: { // field return type name
    createdAt: 'String'
    id: 'String'
    isRequired: 'Boolean'
    menuItemId: 'String'
    name: 'String'
    sortOrder: 'Int'
    type: 'MenuItemOptionType'
    updatedAt: 'String'
    values: 'MenuItemOptionValue'
  }
  MenuItemOptionValue: { // field return type name
    createdAt: 'String'
    id: 'String'
    name: 'String'
    optionId: 'String'
    price: 'String'
    sortOrder: 'Int'
    updatedAt: 'String'
  }
  Mutation: { // field return type name
    acceptDelivery: 'Delivery'
    addToCart: 'CartItem'
    cancelPaymentIntent: 'PaymentIntent'
    clearCart: 'Boolean'
    confirmOrder: 'Order'
    confirmPaymentIntent: 'PaymentIntent'
    createBillingPortalSession: 'BillingPortalSession'
    createCheckoutSession: 'CheckoutSession'
    createPaymentIntent: 'PaymentIntent'
    createRefund: 'Refund'
    createReview: 'Review'
    deliverOrder: 'Delivery'
    login: 'AuthResponse'
    loginWithGoogle: 'AuthResponse'
    logout: 'Boolean'
    pickupOrder: 'Delivery'
    placeOrder: 'Order'
    refreshToken: 'RefreshTokenResponse'
    removeFromCart: 'Boolean'
    setRestaurantOpen: 'Restaurant'
    signup: 'AuthResponse'
    toggleFavorite: 'Boolean'
    updateCartItem: 'CartItem'
    updateCourierLocation: 'CourierProfile'
  }
  Order: { // field return type name
    courier: 'User'
    courierId: 'String'
    createdAt: 'String'
    customer: 'User'
    customerId: 'String'
    deliveryAddress: 'String'
    deliveryFee: 'String'
    estimatedDeliveryTime: 'String'
    events: 'OrderEvent'
    id: 'String'
    items: 'OrderItem'
    orderNumber: 'String'
    paymentStatus: 'PaymentStatus'
    restaurant: 'Restaurant'
    restaurantId: 'String'
    specialInstructions: 'String'
    status: 'OrderStatus'
    stripePaymentIntentId: 'String'
    stripeSessionId: 'String'
    subtotal: 'String'
    tax: 'String'
    tip: 'String'
    total: 'String'
    updatedAt: 'String'
  }
  OrderEvent: { // field return type name
    createdAt: 'String'
    description: 'String'
    eventType: 'String'
    id: 'String'
    order: 'Order'
    orderId: 'String'
  }
  OrderItem: { // field return type name
    createdAt: 'String'
    id: 'String'
    menuItem: 'MenuItem'
    menuItemId: 'String'
    orderId: 'String'
    price: 'String'
    quantity: 'Int'
    selectedOptions: 'String'
    specialInstructions: 'String'
    updatedAt: 'String'
  }
  OrderQueueUpdate: { // field return type name
    queueLength: 'Int'
    restaurantId: 'String'
    updatedAt: 'String'
  }
  OrderTrackingUpdate: { // field return type name
    courierId: 'String'
    message: 'String'
    orderId: 'String'
    status: 'String'
    updatedAt: 'String'
  }
  OrderUpdate: { // field return type name
    message: 'String'
    orderId: 'String'
    status: 'String'
    updatedAt: 'String'
  }
  PaymentIntent: { // field return type name
    amount: 'String'
    clientSecret: 'String'
    createdAt: 'String'
    currency: 'String'
    id: 'String'
    status: 'String'
  }
  Query: { // field return type name
    cart: 'Cart'
    courierAssignments: 'Delivery'
    favoriteRestaurants: 'Restaurant'
    me: 'User'
    merchantOrders: 'Order'
    order: 'Order'
    orders: 'Order'
    paymentIntent: 'PaymentIntent'
    restaurant: 'Restaurant'
    restaurants: 'Restaurant'
    reviews: 'Review'
  }
  RefreshTokenResponse: { // field return type name
    accessToken: 'String'
    refreshToken: 'String'
  }
  Refund: { // field return type name
    amount: 'String'
    createdAt: 'String'
    currency: 'String'
    id: 'String'
    reason: 'String'
    status: 'String'
  }
  Restaurant: { // field return type name
    address: 'Address'
    addressId: 'String'
    createdAt: 'String'
    cuisine: 'String'
    deliveryFee: 'String'
    deliveryTime: 'Int'
    description: 'String'
    id: 'ID'
    image: 'String'
    isActive: 'Boolean'
    isOpen: 'Boolean'
    menuCategories: 'MenuCategory'
    menuItems: 'MenuItem'
    minimumOrder: 'String'
    name: 'String'
    owner: 'User'
    ownerId: 'String'
    phone: 'String'
    rating: 'String'
    reviewCount: 'Int'
    slug: 'String'
    updatedAt: 'String'
  }
  Review: { // field return type name
    comment: 'String'
    courier: 'User'
    createdAt: 'String'
    customer: 'User'
    customerId: 'String'
    id: 'String'
    orderId: 'String'
    rating: 'Int'
    restaurant: 'Restaurant'
    type: 'ReviewType'
    updatedAt: 'String'
  }
  User: { // field return type name
    courierProfile: 'CourierProfile'
    createdAt: 'String'
    email: 'String'
    firstName: 'String'
    id: 'String'
    isActive: 'Boolean'
    lastName: 'String'
    phone: 'String'
    role: 'UserRole'
    updatedAt: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    acceptDelivery: { // args
      deliveryId: string; // String!
    }
    addToCart: { // args
      input: NexusGenInputs['AddToCartInput']; // AddToCartInput!
    }
    cancelPaymentIntent: { // args
      paymentIntentId: string; // String!
    }
    confirmOrder: { // args
      orderId: string; // String!
    }
    confirmPaymentIntent: { // args
      paymentIntentId: string; // String!
    }
    createBillingPortalSession: { // args
      input: NexusGenInputs['CreateBillingPortalSessionInput']; // CreateBillingPortalSessionInput!
    }
    createCheckoutSession: { // args
      input: NexusGenInputs['CreateCheckoutSessionInput']; // CreateCheckoutSessionInput!
    }
    createPaymentIntent: { // args
      input: NexusGenInputs['CreatePaymentIntentInput']; // CreatePaymentIntentInput!
    }
    createRefund: { // args
      input: NexusGenInputs['CreateRefundInput']; // CreateRefundInput!
    }
    createReview: { // args
      input: NexusGenInputs['CreateReviewInput']; // CreateReviewInput!
    }
    deliverOrder: { // args
      deliveryId: string; // String!
    }
    login: { // args
      input: NexusGenInputs['LoginInput']; // LoginInput!
    }
    loginWithGoogle: { // args
      idToken: string; // String!
    }
    pickupOrder: { // args
      deliveryId: string; // String!
    }
    placeOrder: { // args
      input: NexusGenInputs['CreateOrderInput']; // CreateOrderInput!
    }
    refreshToken: { // args
      refreshToken: string; // String!
    }
    removeFromCart: { // args
      input: NexusGenInputs['RemoveFromCartInput']; // RemoveFromCartInput!
    }
    setRestaurantOpen: { // args
      id: string; // String!
      isOpen: boolean; // Boolean!
    }
    signup: { // args
      input: NexusGenInputs['SignupInput']; // SignupInput!
    }
    toggleFavorite: { // args
      restaurantId: string; // String!
    }
    updateCartItem: { // args
      input: NexusGenInputs['UpdateCartItemInput']; // UpdateCartItemInput!
    }
    updateCourierLocation: { // args
      input: NexusGenInputs['UpdateCourierLocationInput']; // UpdateCourierLocationInput!
    }
  }
  Query: {
    merchantOrders: { // args
      limit?: number | null; // Int
      offset?: number | null; // Int
      status?: NexusGenEnums['OrderStatus'] | null; // OrderStatus
    }
    order: { // args
      id: string; // String!
    }
    orders: { // args
      limit?: number | null; // Int
      offset?: number | null; // Int
      status?: NexusGenEnums['OrderStatus'] | null; // OrderStatus
    }
    paymentIntent: { // args
      paymentIntentId: string; // String!
    }
    restaurant: { // args
      slug: string; // String!
    }
    restaurants: { // args
      cuisine?: string | null; // String
      isOpen?: boolean | null; // Boolean
      limit?: number | null; // Int
      offset?: number | null; // Int
      search?: string | null; // String
      sortBy?: string | null; // String
      sortOrder?: string | null; // String
    }
    reviews: { // args
      courierId?: string | null; // String
      limit?: number | null; // Int
      offset?: number | null; // Int
      restaurantId?: string | null; // String
    }
  }
  Restaurant: {
    menuItems: { // args
      categoryId?: string | null; // String
      limit: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    resolveType: true
    __typename: false
    isTypeOf: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}